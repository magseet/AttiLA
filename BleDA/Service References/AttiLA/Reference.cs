//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BleDA.AttiLA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalSettings", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
    [System.SerializableAttribute()]
    public partial class GlobalSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BleDA.AttiLA.TrackerSettings TrackingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BleDA.AttiLA.TrackerSettings Tracking {
            get {
                return this.TrackingField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingField, value) != true)) {
                    this.TrackingField = value;
                    this.RaisePropertyChanged("Tracking");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackerSettings", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
    [System.SerializableAttribute()]
    public partial class TrackerSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CaptureIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledOnStartupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UpdateIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CaptureInterval {
            get {
                return this.CaptureIntervalField;
            }
            set {
                if ((this.CaptureIntervalField.Equals(value) != true)) {
                    this.CaptureIntervalField = value;
                    this.RaisePropertyChanged("CaptureInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnabledOnStartup {
            get {
                return this.EnabledOnStartupField;
            }
            set {
                if ((this.EnabledOnStartupField.Equals(value) != true)) {
                    this.EnabledOnStartupField = value;
                    this.RaisePropertyChanged("EnabledOnStartup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UpdateInterval {
            get {
                return this.UpdateIntervalField;
            }
            set {
                if ((this.UpdateIntervalField.Equals(value) != true)) {
                    this.UpdateIntervalField = value;
                    this.RaisePropertyChanged("UpdateInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
    [System.SerializableAttribute()]
    public partial class ServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContextSimilarity", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
    [System.SerializableAttribute()]
    public partial class ContextSimilarity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SimilarityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextId {
            get {
                return this.ContextIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextIdField, value) != true)) {
                    this.ContextIdField = value;
                    this.RaisePropertyChanged("ContextId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Similarity {
            get {
                return this.SimilarityField;
            }
            set {
                if ((this.SimilarityField.Equals(value) != true)) {
                    this.SimilarityField = value;
                    this.RaisePropertyChanged("Similarity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AttiLA.ILocalizationService", CallbackContract=typeof(BleDA.AttiLA.ILocalizationServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILocalizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Subscribe", ReplyAction="http://tempuri.org/ILocalizationService/SubscribeResponse")]
        bool Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Subscribe", ReplyAction="http://tempuri.org/ILocalizationService/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Unsubscribe", ReplyAction="http://tempuri.org/ILocalizationService/UnsubscribeResponse")]
        bool Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Unsubscribe", ReplyAction="http://tempuri.org/ILocalizationService/UnsubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/GetGlobalSettings", ReplyAction="http://tempuri.org/ILocalizationService/GetGlobalSettingsResponse")]
        BleDA.AttiLA.GlobalSettings GetGlobalSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/GetGlobalSettings", ReplyAction="http://tempuri.org/ILocalizationService/GetGlobalSettingsResponse")]
        System.Threading.Tasks.Task<BleDA.AttiLA.GlobalSettings> GetGlobalSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/SetGlobalSettings", ReplyAction="http://tempuri.org/ILocalizationService/SetGlobalSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BleDA.AttiLA.ServiceException), Action="http://tempuri.org/ILocalizationService/SetGlobalSettingsServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
        void SetGlobalSettings(BleDA.AttiLA.GlobalSettings newSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/SetGlobalSettings", ReplyAction="http://tempuri.org/ILocalizationService/SetGlobalSettingsResponse")]
        System.Threading.Tasks.Task SetGlobalSettingsAsync(BleDA.AttiLA.GlobalSettings newSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/ChangeContext", ReplyAction="http://tempuri.org/ILocalizationService/ChangeContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BleDA.AttiLA.ServiceException), Action="http://tempuri.org/ILocalizationService/ChangeContextServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/ILocalizationService/ChangeContextArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void ChangeContext(string newContextId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/ChangeContext", ReplyAction="http://tempuri.org/ILocalizationService/ChangeContextResponse")]
        System.Threading.Tasks.Task ChangeContextAsync(string newContextId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Localize", ReplyAction="http://tempuri.org/ILocalizationService/LocalizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BleDA.AttiLA.ServiceException), Action="http://tempuri.org/ILocalizationService/LocalizeServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
        BleDA.AttiLA.LocalizeResponse Localize(BleDA.AttiLA.LocalizeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/Localize", ReplyAction="http://tempuri.org/ILocalizationService/LocalizeResponse")]
        System.Threading.Tasks.Task<BleDA.AttiLA.LocalizeResponse> LocalizeAsync(BleDA.AttiLA.LocalizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/TrackModeStart", ReplyAction="http://tempuri.org/ILocalizationService/TrackModeStartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BleDA.AttiLA.ServiceException), Action="http://tempuri.org/ILocalizationService/TrackModeStartServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
        void TrackModeStart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/TrackModeStart", ReplyAction="http://tempuri.org/ILocalizationService/TrackModeStartResponse")]
        System.Threading.Tasks.Task TrackModeStartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/TrackModeStop", ReplyAction="http://tempuri.org/ILocalizationService/TrackModeStopResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BleDA.AttiLA.ServiceException), Action="http://tempuri.org/ILocalizationService/TrackModeStopServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AttiLA.LocalizationService")]
        void TrackModeStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalizationService/TrackModeStop", ReplyAction="http://tempuri.org/ILocalizationService/TrackModeStopResponse")]
        System.Threading.Tasks.Task TrackModeStopAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocalizationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILocalizationService/TrackModeStarted")]
        void TrackModeStarted(System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILocalizationService/TrackModeStopped")]
        void TrackModeStopped(System.DateTime stopTime);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Localize", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LocalizeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool changeContext;
        
        public LocalizeRequest() {
        }
        
        public LocalizeRequest(bool changeContext) {
            this.changeContext = changeContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LocalizeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LocalizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LocalizeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BleDA.AttiLA.ContextSimilarity[] similarContexts;
        
        public LocalizeResponse() {
        }
        
        public LocalizeResponse(string LocalizeResult, BleDA.AttiLA.ContextSimilarity[] similarContexts) {
            this.LocalizeResult = LocalizeResult;
            this.similarContexts = similarContexts;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocalizationServiceChannel : BleDA.AttiLA.ILocalizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocalizationServiceClient : System.ServiceModel.DuplexClientBase<BleDA.AttiLA.ILocalizationService>, BleDA.AttiLA.ILocalizationService {
        
        public LocalizationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LocalizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LocalizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LocalizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LocalizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Subscribe() {
            return base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public bool Unsubscribe() {
            return base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task<bool> UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public BleDA.AttiLA.GlobalSettings GetGlobalSettings() {
            return base.Channel.GetGlobalSettings();
        }
        
        public System.Threading.Tasks.Task<BleDA.AttiLA.GlobalSettings> GetGlobalSettingsAsync() {
            return base.Channel.GetGlobalSettingsAsync();
        }
        
        public void SetGlobalSettings(BleDA.AttiLA.GlobalSettings newSettings) {
            base.Channel.SetGlobalSettings(newSettings);
        }
        
        public System.Threading.Tasks.Task SetGlobalSettingsAsync(BleDA.AttiLA.GlobalSettings newSettings) {
            return base.Channel.SetGlobalSettingsAsync(newSettings);
        }
        
        public void ChangeContext(string newContextId) {
            base.Channel.ChangeContext(newContextId);
        }
        
        public System.Threading.Tasks.Task ChangeContextAsync(string newContextId) {
            return base.Channel.ChangeContextAsync(newContextId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BleDA.AttiLA.LocalizeResponse BleDA.AttiLA.ILocalizationService.Localize(BleDA.AttiLA.LocalizeRequest request) {
            return base.Channel.Localize(request);
        }
        
        public string Localize(bool changeContext, out BleDA.AttiLA.ContextSimilarity[] similarContexts) {
            BleDA.AttiLA.LocalizeRequest inValue = new BleDA.AttiLA.LocalizeRequest();
            inValue.changeContext = changeContext;
            BleDA.AttiLA.LocalizeResponse retVal = ((BleDA.AttiLA.ILocalizationService)(this)).Localize(inValue);
            similarContexts = retVal.similarContexts;
            return retVal.LocalizeResult;
        }
        
        public System.Threading.Tasks.Task<BleDA.AttiLA.LocalizeResponse> LocalizeAsync(BleDA.AttiLA.LocalizeRequest request) {
            return base.Channel.LocalizeAsync(request);
        }
        
        public void TrackModeStart() {
            base.Channel.TrackModeStart();
        }
        
        public System.Threading.Tasks.Task TrackModeStartAsync() {
            return base.Channel.TrackModeStartAsync();
        }
        
        public void TrackModeStop() {
            base.Channel.TrackModeStop();
        }
        
        public System.Threading.Tasks.Task TrackModeStopAsync() {
            return base.Channel.TrackModeStopAsync();
        }
    }
}
